// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetSnapshotBlockPublicAccessState`](crate::operation::get_snapshot_block_public_access_state::builders::GetSnapshotBlockPublicAccessStateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::get_snapshot_block_public_access_state::builders::GetSnapshotBlockPublicAccessStateFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::get_snapshot_block_public_access_state::builders::GetSnapshotBlockPublicAccessStateFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`GetSnapshotBlockPublicAccessStateOutput`](crate::operation::get_snapshot_block_public_access_state::GetSnapshotBlockPublicAccessStateOutput) with field(s):
    ///   - [`state(Option<SnapshotBlockPublicAccessState>)`](crate::operation::get_snapshot_block_public_access_state::GetSnapshotBlockPublicAccessStateOutput::state): <p>The current state of block public access for snapshots. Possible values include:</p> <ul>  <li>   <p><code>block-all-sharing</code> - All public sharing of snapshots is blocked. Users in the account can't request new public sharing. Additionally, snapshots that were already publicly shared are treated as private and are not publicly available.</p></li>  <li>   <p><code>block-new-sharing</code> - Only new public sharing of snapshots is blocked. Users in the account can't request new public sharing. However, snapshots that were already publicly shared, remain publicly available.</p></li>  <li>   <p><code>unblocked</code> - Public sharing is not blocked. Users can publicly share snapshots.</p></li> </ul>
    /// - On failure, responds with [`SdkError<GetSnapshotBlockPublicAccessStateError>`](crate::operation::get_snapshot_block_public_access_state::GetSnapshotBlockPublicAccessStateError)
    pub fn get_snapshot_block_public_access_state(
        &self,
    ) -> crate::operation::get_snapshot_block_public_access_state::builders::GetSnapshotBlockPublicAccessStateFluentBuilder {
        crate::operation::get_snapshot_block_public_access_state::builders::GetSnapshotBlockPublicAccessStateFluentBuilder::new(self.handle.clone())
    }
}
