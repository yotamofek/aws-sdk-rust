// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_lock_snapshot_input_input_input(
    input: &crate::operation::lock_snapshot::LockSnapshotInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "LockSnapshot", "2016-11-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("SnapshotId");
    if let Some(var_2) = &input.snapshot_id {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("DryRun");
    if let Some(var_4) = &input.dry_run {
        scope_3.boolean(*var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("LockMode");
    if let Some(var_6) = &input.lock_mode {
        scope_5.string(var_6.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("CoolOffPeriod");
    if let Some(var_8) = &input.cool_off_period {
        scope_7.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_8).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("LockDuration");
    if let Some(var_10) = &input.lock_duration {
        scope_9.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_10).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("ExpirationDate");
    if let Some(var_12) = &input.expiration_date {
        scope_11.date_time(var_12, ::aws_smithy_types::date_time::Format::DateTime)?;
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
