// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details for Site-to-Site VPN tunnel endpoint maintenance events.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MaintenanceDetails {
    /// <p>Verify existence of a pending maintenance.</p>
    pub pending_maintenance: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp after which Amazon Web Services will automatically apply maintenance.</p>
    pub maintenance_auto_applied_after: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Timestamp of last applied maintenance.</p>
    pub last_maintenance_applied: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl MaintenanceDetails {
    /// <p>Verify existence of a pending maintenance.</p>
    pub fn pending_maintenance(&self) -> ::std::option::Option<&str> {
        self.pending_maintenance.as_deref()
    }
    /// <p>The timestamp after which Amazon Web Services will automatically apply maintenance.</p>
    pub fn maintenance_auto_applied_after(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.maintenance_auto_applied_after.as_ref()
    }
    /// <p>Timestamp of last applied maintenance.</p>
    pub fn last_maintenance_applied(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_maintenance_applied.as_ref()
    }
}
impl MaintenanceDetails {
    /// Creates a new builder-style object to manufacture [`MaintenanceDetails`](crate::types::MaintenanceDetails).
    pub fn builder() -> crate::types::builders::MaintenanceDetailsBuilder {
        crate::types::builders::MaintenanceDetailsBuilder::default()
    }
}

/// A builder for [`MaintenanceDetails`](crate::types::MaintenanceDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MaintenanceDetailsBuilder {
    pub(crate) pending_maintenance: ::std::option::Option<::std::string::String>,
    pub(crate) maintenance_auto_applied_after: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_maintenance_applied: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl MaintenanceDetailsBuilder {
    /// <p>Verify existence of a pending maintenance.</p>
    pub fn pending_maintenance(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pending_maintenance = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Verify existence of a pending maintenance.</p>
    pub fn set_pending_maintenance(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pending_maintenance = input;
        self
    }
    /// <p>Verify existence of a pending maintenance.</p>
    pub fn get_pending_maintenance(&self) -> &::std::option::Option<::std::string::String> {
        &self.pending_maintenance
    }
    /// <p>The timestamp after which Amazon Web Services will automatically apply maintenance.</p>
    pub fn maintenance_auto_applied_after(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.maintenance_auto_applied_after = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp after which Amazon Web Services will automatically apply maintenance.</p>
    pub fn set_maintenance_auto_applied_after(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.maintenance_auto_applied_after = input;
        self
    }
    /// <p>The timestamp after which Amazon Web Services will automatically apply maintenance.</p>
    pub fn get_maintenance_auto_applied_after(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.maintenance_auto_applied_after
    }
    /// <p>Timestamp of last applied maintenance.</p>
    pub fn last_maintenance_applied(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_maintenance_applied = ::std::option::Option::Some(input);
        self
    }
    /// <p>Timestamp of last applied maintenance.</p>
    pub fn set_last_maintenance_applied(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_maintenance_applied = input;
        self
    }
    /// <p>Timestamp of last applied maintenance.</p>
    pub fn get_last_maintenance_applied(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_maintenance_applied
    }
    /// Consumes the builder and constructs a [`MaintenanceDetails`](crate::types::MaintenanceDetails).
    pub fn build(self) -> crate::types::MaintenanceDetails {
        crate::types::MaintenanceDetails {
            pending_maintenance: self.pending_maintenance,
            maintenance_auto_applied_after: self.maintenance_auto_applied_after,
            last_maintenance_applied: self.last_maintenance_applied,
        }
    }
}
