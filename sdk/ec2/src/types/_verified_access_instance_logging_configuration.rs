// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes logging options for an Amazon Web Services Verified Access instance.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VerifiedAccessInstanceLoggingConfiguration {
    /// <p>The ID of the Amazon Web Services Verified Access instance.</p>
    pub verified_access_instance_id: ::std::option::Option<::std::string::String>,
    /// <p>Details about the logging options.</p>
    pub access_logs: ::std::option::Option<crate::types::VerifiedAccessLogs>,
}
impl VerifiedAccessInstanceLoggingConfiguration {
    /// <p>The ID of the Amazon Web Services Verified Access instance.</p>
    pub fn verified_access_instance_id(&self) -> ::std::option::Option<&str> {
        self.verified_access_instance_id.as_deref()
    }
    /// <p>Details about the logging options.</p>
    pub fn access_logs(&self) -> ::std::option::Option<&crate::types::VerifiedAccessLogs> {
        self.access_logs.as_ref()
    }
}
impl VerifiedAccessInstanceLoggingConfiguration {
    /// Creates a new builder-style object to manufacture [`VerifiedAccessInstanceLoggingConfiguration`](crate::types::VerifiedAccessInstanceLoggingConfiguration).
    pub fn builder() -> crate::types::builders::VerifiedAccessInstanceLoggingConfigurationBuilder {
        crate::types::builders::VerifiedAccessInstanceLoggingConfigurationBuilder::default()
    }
}

/// A builder for [`VerifiedAccessInstanceLoggingConfiguration`](crate::types::VerifiedAccessInstanceLoggingConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VerifiedAccessInstanceLoggingConfigurationBuilder {
    pub(crate) verified_access_instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) access_logs: ::std::option::Option<crate::types::VerifiedAccessLogs>,
}
impl VerifiedAccessInstanceLoggingConfigurationBuilder {
    /// <p>The ID of the Amazon Web Services Verified Access instance.</p>
    pub fn verified_access_instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.verified_access_instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services Verified Access instance.</p>
    pub fn set_verified_access_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.verified_access_instance_id = input;
        self
    }
    /// <p>The ID of the Amazon Web Services Verified Access instance.</p>
    pub fn get_verified_access_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.verified_access_instance_id
    }
    /// <p>Details about the logging options.</p>
    pub fn access_logs(mut self, input: crate::types::VerifiedAccessLogs) -> Self {
        self.access_logs = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details about the logging options.</p>
    pub fn set_access_logs(mut self, input: ::std::option::Option<crate::types::VerifiedAccessLogs>) -> Self {
        self.access_logs = input;
        self
    }
    /// <p>Details about the logging options.</p>
    pub fn get_access_logs(&self) -> &::std::option::Option<crate::types::VerifiedAccessLogs> {
        &self.access_logs
    }
    /// Consumes the builder and constructs a [`VerifiedAccessInstanceLoggingConfiguration`](crate::types::VerifiedAccessInstanceLoggingConfiguration).
    pub fn build(self) -> crate::types::VerifiedAccessInstanceLoggingConfiguration {
        crate::types::VerifiedAccessInstanceLoggingConfiguration {
            verified_access_instance_id: self.verified_access_instance_id,
            access_logs: self.access_logs,
        }
    }
}
