// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the state of a Client VPN endpoint route.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ClientVpnRouteStatus {
    /// <p>The state of the Client VPN endpoint route.</p>
    pub code: ::std::option::Option<crate::types::ClientVpnRouteStatusCode>,
    /// <p>A message about the status of the Client VPN endpoint route, if applicable.</p>
    pub message: ::std::option::Option<::std::string::String>,
}
impl ClientVpnRouteStatus {
    /// <p>The state of the Client VPN endpoint route.</p>
    pub fn code(&self) -> ::std::option::Option<&crate::types::ClientVpnRouteStatusCode> {
        self.code.as_ref()
    }
    /// <p>A message about the status of the Client VPN endpoint route, if applicable.</p>
    pub fn message(&self) -> ::std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl ClientVpnRouteStatus {
    /// Creates a new builder-style object to manufacture [`ClientVpnRouteStatus`](crate::types::ClientVpnRouteStatus).
    pub fn builder() -> crate::types::builders::ClientVpnRouteStatusBuilder {
        crate::types::builders::ClientVpnRouteStatusBuilder::default()
    }
}

/// A builder for [`ClientVpnRouteStatus`](crate::types::ClientVpnRouteStatus).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ClientVpnRouteStatusBuilder {
    pub(crate) code: ::std::option::Option<crate::types::ClientVpnRouteStatusCode>,
    pub(crate) message: ::std::option::Option<::std::string::String>,
}
impl ClientVpnRouteStatusBuilder {
    /// <p>The state of the Client VPN endpoint route.</p>
    pub fn code(mut self, input: crate::types::ClientVpnRouteStatusCode) -> Self {
        self.code = ::std::option::Option::Some(input);
        self
    }
    /// <p>The state of the Client VPN endpoint route.</p>
    pub fn set_code(mut self, input: ::std::option::Option<crate::types::ClientVpnRouteStatusCode>) -> Self {
        self.code = input;
        self
    }
    /// <p>The state of the Client VPN endpoint route.</p>
    pub fn get_code(&self) -> &::std::option::Option<crate::types::ClientVpnRouteStatusCode> {
        &self.code
    }
    /// <p>A message about the status of the Client VPN endpoint route, if applicable.</p>
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A message about the status of the Client VPN endpoint route, if applicable.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>A message about the status of the Client VPN endpoint route, if applicable.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// Consumes the builder and constructs a [`ClientVpnRouteStatus`](crate::types::ClientVpnRouteStatus).
    pub fn build(self) -> crate::types::ClientVpnRouteStatus {
        crate::types::ClientVpnRouteStatus {
            code: self.code,
            message: self.message,
        }
    }
}
