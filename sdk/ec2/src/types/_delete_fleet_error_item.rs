// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an EC2 Fleet that was not successfully deleted.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteFleetErrorItem {
    /// <p>The error.</p>
    pub error: ::std::option::Option<crate::types::DeleteFleetError>,
    /// <p>The ID of the EC2 Fleet.</p>
    pub fleet_id: ::std::option::Option<::std::string::String>,
}
impl DeleteFleetErrorItem {
    /// <p>The error.</p>
    pub fn error(&self) -> ::std::option::Option<&crate::types::DeleteFleetError> {
        self.error.as_ref()
    }
    /// <p>The ID of the EC2 Fleet.</p>
    pub fn fleet_id(&self) -> ::std::option::Option<&str> {
        self.fleet_id.as_deref()
    }
}
impl DeleteFleetErrorItem {
    /// Creates a new builder-style object to manufacture [`DeleteFleetErrorItem`](crate::types::DeleteFleetErrorItem).
    pub fn builder() -> crate::types::builders::DeleteFleetErrorItemBuilder {
        crate::types::builders::DeleteFleetErrorItemBuilder::default()
    }
}

/// A builder for [`DeleteFleetErrorItem`](crate::types::DeleteFleetErrorItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteFleetErrorItemBuilder {
    pub(crate) error: ::std::option::Option<crate::types::DeleteFleetError>,
    pub(crate) fleet_id: ::std::option::Option<::std::string::String>,
}
impl DeleteFleetErrorItemBuilder {
    /// <p>The error.</p>
    pub fn error(mut self, input: crate::types::DeleteFleetError) -> Self {
        self.error = ::std::option::Option::Some(input);
        self
    }
    /// <p>The error.</p>
    pub fn set_error(mut self, input: ::std::option::Option<crate::types::DeleteFleetError>) -> Self {
        self.error = input;
        self
    }
    /// <p>The error.</p>
    pub fn get_error(&self) -> &::std::option::Option<crate::types::DeleteFleetError> {
        &self.error
    }
    /// <p>The ID of the EC2 Fleet.</p>
    pub fn fleet_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.fleet_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the EC2 Fleet.</p>
    pub fn set_fleet_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.fleet_id = input;
        self
    }
    /// <p>The ID of the EC2 Fleet.</p>
    pub fn get_fleet_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.fleet_id
    }
    /// Consumes the builder and constructs a [`DeleteFleetErrorItem`](crate::types::DeleteFleetErrorItem).
    pub fn build(self) -> crate::types::DeleteFleetErrorItem {
        crate::types::DeleteFleetErrorItem {
            error: self.error,
            fleet_id: self.fleet_id,
        }
    }
}
