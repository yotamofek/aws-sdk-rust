// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetImageBlockPublicAccessStateOutput {
    /// <p>The current state of block public access for AMIs at the account level in the specified Amazon Web Services Region.</p>
    /// <p>Possible values:</p>
    /// <ul>
    /// <li>
    /// <p><code>block-new-sharing</code> - Any attempt to publicly share your AMIs in the specified Region is blocked.</p></li>
    /// <li>
    /// <p><code>unblocked</code> - Your AMIs in the specified Region can be publicly shared.</p></li>
    /// </ul>
    pub image_block_public_access_state: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetImageBlockPublicAccessStateOutput {
    /// <p>The current state of block public access for AMIs at the account level in the specified Amazon Web Services Region.</p>
    /// <p>Possible values:</p>
    /// <ul>
    /// <li>
    /// <p><code>block-new-sharing</code> - Any attempt to publicly share your AMIs in the specified Region is blocked.</p></li>
    /// <li>
    /// <p><code>unblocked</code> - Your AMIs in the specified Region can be publicly shared.</p></li>
    /// </ul>
    pub fn image_block_public_access_state(&self) -> ::std::option::Option<&str> {
        self.image_block_public_access_state.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for GetImageBlockPublicAccessStateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetImageBlockPublicAccessStateOutput {
    /// Creates a new builder-style object to manufacture [`GetImageBlockPublicAccessStateOutput`](crate::operation::get_image_block_public_access_state::GetImageBlockPublicAccessStateOutput).
    pub fn builder() -> crate::operation::get_image_block_public_access_state::builders::GetImageBlockPublicAccessStateOutputBuilder {
        crate::operation::get_image_block_public_access_state::builders::GetImageBlockPublicAccessStateOutputBuilder::default()
    }
}

/// A builder for [`GetImageBlockPublicAccessStateOutput`](crate::operation::get_image_block_public_access_state::GetImageBlockPublicAccessStateOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetImageBlockPublicAccessStateOutputBuilder {
    pub(crate) image_block_public_access_state: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetImageBlockPublicAccessStateOutputBuilder {
    /// <p>The current state of block public access for AMIs at the account level in the specified Amazon Web Services Region.</p>
    /// <p>Possible values:</p>
    /// <ul>
    /// <li>
    /// <p><code>block-new-sharing</code> - Any attempt to publicly share your AMIs in the specified Region is blocked.</p></li>
    /// <li>
    /// <p><code>unblocked</code> - Your AMIs in the specified Region can be publicly shared.</p></li>
    /// </ul>
    pub fn image_block_public_access_state(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.image_block_public_access_state = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The current state of block public access for AMIs at the account level in the specified Amazon Web Services Region.</p>
    /// <p>Possible values:</p>
    /// <ul>
    /// <li>
    /// <p><code>block-new-sharing</code> - Any attempt to publicly share your AMIs in the specified Region is blocked.</p></li>
    /// <li>
    /// <p><code>unblocked</code> - Your AMIs in the specified Region can be publicly shared.</p></li>
    /// </ul>
    pub fn set_image_block_public_access_state(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.image_block_public_access_state = input;
        self
    }
    /// <p>The current state of block public access for AMIs at the account level in the specified Amazon Web Services Region.</p>
    /// <p>Possible values:</p>
    /// <ul>
    /// <li>
    /// <p><code>block-new-sharing</code> - Any attempt to publicly share your AMIs in the specified Region is blocked.</p></li>
    /// <li>
    /// <p><code>unblocked</code> - Your AMIs in the specified Region can be publicly shared.</p></li>
    /// </ul>
    pub fn get_image_block_public_access_state(&self) -> &::std::option::Option<::std::string::String> {
        &self.image_block_public_access_state
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetImageBlockPublicAccessStateOutput`](crate::operation::get_image_block_public_access_state::GetImageBlockPublicAccessStateOutput).
    pub fn build(self) -> crate::operation::get_image_block_public_access_state::GetImageBlockPublicAccessStateOutput {
        crate::operation::get_image_block_public_access_state::GetImageBlockPublicAccessStateOutput {
            image_block_public_access_state: self.image_block_public_access_state,
            _request_id: self._request_id,
        }
    }
}
