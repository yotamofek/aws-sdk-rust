// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    _response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_xml::decode::XmlDecodeError> {
    crate::ec2_query_errors::parse_error_metadata(response_body)
}

pub(crate) mod shape_capacity_reservation_specification_response;

pub(crate) mod shape_cpu_options;

pub(crate) mod shape_describe_instances_input;

pub(crate) mod shape_describe_instances;

pub(crate) mod shape_elastic_gpu_association_list;

pub(crate) mod shape_elastic_inference_accelerator_association_list;

pub(crate) mod shape_filter;

pub(crate) mod shape_group_identifier_list;

pub(crate) mod shape_group_identifier;

pub(crate) mod shape_iam_instance_profile;

pub(crate) mod shape_instance_block_device_mapping_list;

pub(crate) mod shape_instance_list;

pub(crate) mod shape_instance_network_interface_list;

pub(crate) mod shape_instance_state;

pub(crate) mod shape_instance;

pub(crate) mod shape_monitoring;

pub(crate) mod shape_placement;

pub(crate) mod shape_product_code_list;

pub(crate) mod shape_reservation_list;

pub(crate) mod shape_reservation;

pub(crate) mod shape_state_reason;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_capacity_reservation_target_response;
pub(crate) mod shape_elastic_gpu_association;
pub(crate) mod shape_elastic_inference_accelerator_association;
pub(crate) mod shape_instance_block_device_mapping;
pub(crate) mod shape_instance_network_interface;
pub(crate) mod shape_hibernation_options;
pub(crate) mod shape_license_list;
pub(crate) mod shape_license_configuration;
pub(crate) mod shape_instance_metadata_options_response;
pub(crate) mod shape_enclave_options;
pub(crate) mod shape_private_dns_name_options_response;
pub(crate) mod shape_instance_maintenance_options;
pub(crate) mod shape_product_code;
pub(crate) mod shape_tag;


pub(crate) mod shape_ebs_instance_block_device;
pub(crate) mod shape_instance_network_interface_association;
pub(crate) mod shape_instance_network_interface_attachment;
pub(crate) mod shape_instance_ipv6_address_list;
pub(crate) mod shape_instance_private_ip_address_list;
pub(crate) mod shape_instance_ipv4_prefix_list;
pub(crate) mod shape_instance_ipv6_prefix_list;
pub(crate) mod shape_connection_tracking_specification_response;

pub(crate) mod shape_instance_attachment_ena_srd_specification;
pub(crate) mod shape_instance_ipv6_address;
pub(crate) mod shape_instance_private_ip_address;
pub(crate) mod shape_instance_ipv4_prefix;
pub(crate) mod shape_instance_ipv6_prefix;

pub(crate) mod shape_instance_attachment_ena_srd_udp_specification;
