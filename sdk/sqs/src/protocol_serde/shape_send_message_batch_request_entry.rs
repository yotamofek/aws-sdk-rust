// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_send_message_batch_request_entry(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::SendMessageBatchRequestEntry,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("Id").string(input.id.as_str());
    }
    {
        object.key("MessageBody").string(input.message_body.as_str());
    }
    if let Some(var_1) = &input.delay_seconds {
        object.key("DelaySeconds").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_1).into()),
        );
    }
    if let Some(var_2) = &input.message_attributes {
        #[allow(unused_mut)]
        let mut object_3 = object.key("MessageAttributes").start_object();
        for (key_4, value_5) in var_2 {
            {
                #[allow(unused_mut)]
                let mut object_6 = object_3.key(key_4.as_str()).start_object();
                crate::protocol_serde::shape_message_attribute_value::ser_message_attribute_value(&mut object_6, value_5)?;
                object_6.finish();
            }
        }
        object_3.finish();
    }
    if let Some(var_7) = &input.message_system_attributes {
        #[allow(unused_mut)]
        let mut object_8 = object.key("MessageSystemAttributes").start_object();
        for (key_9, value_10) in var_7 {
            {
                #[allow(unused_mut)]
                let mut object_11 = object_8.key(key_9.as_str()).start_object();
                crate::protocol_serde::shape_message_system_attribute_value::ser_message_system_attribute_value(&mut object_11, value_10)?;
                object_11.finish();
            }
        }
        object_8.finish();
    }
    if let Some(var_12) = &input.message_deduplication_id {
        object.key("MessageDeduplicationId").string(var_12.as_str());
    }
    if let Some(var_13) = &input.message_group_id {
        object.key("MessageGroupId").string(var_13.as_str());
    }
    Ok(())
}
